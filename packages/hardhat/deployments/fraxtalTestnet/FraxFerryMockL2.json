{
  "address": "0x7443eF74594004763574d30C0DEc8DbD2F3241af",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "asset_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "batchNo",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "end",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "Depart",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountAfterFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Embark",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "FEE_MAX",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FEE_MIN",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FEE_RATE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_WAIT_PERIOD_ADD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_WAIT_PERIOD_EXECUTE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REDUCED_DECIMALS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "calculateFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "embarkWithRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emitDepart",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emitEmbark",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x93e68da3937454657de792d13081ea355b0d94f3c65fb62d86907aebd0955eab",
  "receipt": {
    "to": null,
    "from": "0x12bD43589950023a5E20c74064c119D47A55c443",
    "contractAddress": "0x7443eF74594004763574d30C0DEc8DbD2F3241af",
    "transactionIndex": 1,
    "gasUsed": "605690",
    "logsBloom": "0x
    "blockHash": "0xb70d3302d02e37eb083676a629029b6011865518cd7194162dd1b731208a4eab",
    "transactionHash": "0x93e68da3937454657de792d13081ea355b0d94f3c65fb62d86907aebd0955eab",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 12021907,
        "transactionHash": "0x93e68da3937454657de792d13081ea355b0d94f3c65fb62d86907aebd0955eab",
        "address": "0x7443eF74594004763574d30C0DEc8DbD2F3241af",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000012bd43589950023a5e20c74064c119d47a55c443"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xb70d3302d02e37eb083676a629029b6011865518cd7194162dd1b731208a4eab"
      }
    ],
    "blockNumber": 12021907,
    "cumulativeGasUsed": "651656",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xfc00000000000000000000000000000000000005"
  ],
  "numDeployments": 1,
  "solcInputHash": "15c9b36d1d775bef3a450600c584bed4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"asset_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"batchNo\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"Depart\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountAfterFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Embark\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FEE_MAX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEE_MIN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEE_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_WAIT_PERIOD_ADD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_WAIT_PERIOD_EXECUTE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REDUCED_DECIMALS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculateFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"embarkWithRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emitDepart\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emitEmbark\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FraxFerryMockL2.sol\":\"FraxFerryMockL2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/FraxFerryMockL2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract FraxFerryMockL2 is Ownable {\\n    IERC20 private _asset;\\n\\n    event Embark(address indexed sender, uint index, uint amount, uint amountAfterFee, uint timestamp);\\n    event Depart(uint batchNo, uint start, uint end, bytes32 hash);\\n\\n    uint public MIN_WAIT_PERIOD_ADD=3600; // Minimal 1 hour waiting\\n    uint public MIN_WAIT_PERIOD_EXECUTE=79200; // Minimal 22 hour waiting\\n    uint public FEE_RATE=0;      // 0.1% fee\\n    uint public FEE_MIN=1*1e16;   // 0.01 token min fee\\n    uint public FEE_MAX=1*1e16; // 0.01 token max fee\\n   \\n    uint constant public REDUCED_DECIMALS=1e10;\\n\\n    constructor(IERC20 asset_) \\n        Ownable(msg.sender)\\n    {\\n        _asset = asset_;\\n    }\\n\\n    function embarkWithRecipient(uint amount, address recipient) public {\\n        require(_asset.transferFrom(msg.sender, address(this), amount), \\\"Transfer failed\\\");\\n\\n        uint amountAfterFee = amount - calculateFee(amount);\\n        emit Embark(msg.sender, 1, amount, amountAfterFee, block.timestamp);\\n\\n        // Mock logic for departing to L1\\n        emit Depart(block.number, 0, 2, keccak256(abi.encodePacked(block.number, msg.sender, amountAfterFee)));\\n    }\\n\\n    function emitEmbark() public onlyOwner {\\n        emit Embark(msg.sender, 1, 100000000, 1000000000, block.timestamp);\\n    }\\n\\n    function emitDepart() public onlyOwner {\\n        uint amountAfterFee = 10000000000000;\\n        emit Depart(block.number, 0, 2, keccak256(abi.encodePacked(block.number, msg.sender, amountAfterFee)));\\n    }\\n\\n    function calculateFee(uint amount) public pure returns (uint) {\\n        // Mock fee calculation, e.g., 1% fee\\n        return (amount * 1) / 100;\\n    }\\n\\n    function withdraw(uint amount) public onlyOwner {\\n        require(_asset.transfer(msg.sender, amount), \\\"Withdrawal failed\\\");\\n    }\\n\\n    function paused() public pure returns (bool) {\\n        return false;\\n    }\\n}\\n\",\"keccak256\":\"0x7e96ddb4b01513d0883fa3dd4a95afdf3e2fe94fef745165420e09561f0db2cc\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052610e10600255620135606003556000600455662386f26fc10000600555662386f26fc1000060065534801561003857600080fd5b506040516108aa3803806108aa833981016040819052610057916100fc565b338061007d57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b610086816100ac565b50600180546001600160a01b0319166001600160a01b039290921691909117905561012c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561010e57600080fd5b81516001600160a01b038116811461012557600080fd5b9392505050565b61076f8061013b6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806366e64f97116100975780638da5cb5b116100665780638da5cb5b1461018c57806399a5d747146101a7578063c2624e1e146101ba578063f2fde38b146101c357600080fd5b806366e64f9714610168578063715018a614610174578063778cf4c61461017c5780637c1297861461018457600080fd5b80632e1a7d4d116100d35780632e1a7d4d1461013457806333032dd01461014757806359c13403146101505780635c975abb1461015957600080fd5b8063024faa8c146100fa57806305c211d2146101165780632d11c58a1461012b575b600080fd5b61010360035481565b6040519081526020015b60405180910390f35b61012961012436600461064e565b6101d6565b005b61010360045481565b61012961014236600461067a565b610391565b61010360025481565b61010360055481565b6040516000815260200161010d565b6101036402540be40081565b610129610451565b610129610465565b6101296104bf565b6000546040516001600160a01b03909116815260200161010d565b6101036101b536600461067a565b61055b565b61010360065481565b6101296101d1366004610693565b61057a565b6001546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561022d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025191906106b5565b6102945760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b60448201526064015b60405180910390fd5b600061029f8361055b565b6102a990846106ed565b60408051600181526020810186905290810182905242606082015290915033907f0250c838bae2cda1e214f0925d41846180714450539039d6fd90a4121d98738e9060800160405180910390a27fe078fb854f34cd8ca5f749fe2e680b692ef7df5e057026369a30c8965a3219ca43600060024333866040516020016103549392919092835260609190911b6bffffffffffffffffffffffff19166020830152603482015260540190565b60408051601f19818403018152828252805160209182012095835282019390935291820152606081019190915260800160405180910390a1505050565b6103996105b5565b60015460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156103ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040e91906106b5565b61044e5760405162461bcd60e51b815260206004820152601160248201527015da5d1a191c985dd85b0819985a5b1959607a1b604482015260640161028b565b50565b6104596105b5565b61046360006105e2565b565b61046d6105b5565b60408051600181526305f5e1006020820152633b9aca0081830152426060820152905133917f0250c838bae2cda1e214f0925d41846180714450539039d6fd90a4121d98738e919081900360800190a2565b6104c76105b5565b604080514360208083018290523360601b6bffffffffffffffffffffffff1916838501526509184e72a00060548085018290528551808603909101815260748501808752815191909301209290915260006094840152600260b484015260d483019190915291517fe078fb854f34cd8ca5f749fe2e680b692ef7df5e057026369a30c8965a3219ca9181900360f40190a150565b6000606461056a836001610700565b6105749190610717565b92915050565b6105826105b5565b6001600160a01b0381166105ac57604051631e4fbdf760e01b81526000600482015260240161028b565b61044e816105e2565b6000546001600160a01b031633146104635760405163118cdaa760e01b815233600482015260240161028b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461064957600080fd5b919050565b6000806040838503121561066157600080fd5b8235915061067160208401610632565b90509250929050565b60006020828403121561068c57600080fd5b5035919050565b6000602082840312156106a557600080fd5b6106ae82610632565b9392505050565b6000602082840312156106c757600080fd5b815180151581146106ae57600080fd5b634e487b7160e01b600052601160045260246000fd5b81810381811115610574576105746106d7565b8082028115828204841417610574576105746106d7565b60008261073457634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122032684cf034f454e243ee8034718e5861259a25f4d2111ae9e2c4db4fa58cda9564736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c806366e64f97116100975780638da5cb5b116100665780638da5cb5b1461018c57806399a5d747146101a7578063c2624e1e146101ba578063f2fde38b146101c357600080fd5b806366e64f9714610168578063715018a614610174578063778cf4c61461017c5780637c1297861461018457600080fd5b80632e1a7d4d116100d35780632e1a7d4d1461013457806333032dd01461014757806359c13403146101505780635c975abb1461015957600080fd5b8063024faa8c146100fa57806305c211d2146101165780632d11c58a1461012b575b600080fd5b61010360035481565b6040519081526020015b60405180910390f35b61012961012436600461064e565b6101d6565b005b61010360045481565b61012961014236600461067a565b610391565b61010360025481565b61010360055481565b6040516000815260200161010d565b6101036402540be40081565b610129610451565b610129610465565b6101296104bf565b6000546040516001600160a01b03909116815260200161010d565b6101036101b536600461067a565b61055b565b61010360065481565b6101296101d1366004610693565b61057a565b6001546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561022d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025191906106b5565b6102945760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b60448201526064015b60405180910390fd5b600061029f8361055b565b6102a990846106ed565b60408051600181526020810186905290810182905242606082015290915033907f0250c838bae2cda1e214f0925d41846180714450539039d6fd90a4121d98738e9060800160405180910390a27fe078fb854f34cd8ca5f749fe2e680b692ef7df5e057026369a30c8965a3219ca43600060024333866040516020016103549392919092835260609190911b6bffffffffffffffffffffffff19166020830152603482015260540190565b60408051601f19818403018152828252805160209182012095835282019390935291820152606081019190915260800160405180910390a1505050565b6103996105b5565b60015460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156103ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040e91906106b5565b61044e5760405162461bcd60e51b815260206004820152601160248201527015da5d1a191c985dd85b0819985a5b1959607a1b604482015260640161028b565b50565b6104596105b5565b61046360006105e2565b565b61046d6105b5565b60408051600181526305f5e1006020820152633b9aca0081830152426060820152905133917f0250c838bae2cda1e214f0925d41846180714450539039d6fd90a4121d98738e919081900360800190a2565b6104c76105b5565b604080514360208083018290523360601b6bffffffffffffffffffffffff1916838501526509184e72a00060548085018290528551808603909101815260748501808752815191909301209290915260006094840152600260b484015260d483019190915291517fe078fb854f34cd8ca5f749fe2e680b692ef7df5e057026369a30c8965a3219ca9181900360f40190a150565b6000606461056a836001610700565b6105749190610717565b92915050565b6105826105b5565b6001600160a01b0381166105ac57604051631e4fbdf760e01b81526000600482015260240161028b565b61044e816105e2565b6000546001600160a01b031633146104635760405163118cdaa760e01b815233600482015260240161028b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461064957600080fd5b919050565b6000806040838503121561066157600080fd5b8235915061067160208401610632565b90509250929050565b60006020828403121561068c57600080fd5b5035919050565b6000602082840312156106a557600080fd5b6106ae82610632565b9392505050565b6000602082840312156106c757600080fd5b815180151581146106ae57600080fd5b634e487b7160e01b600052601160045260246000fd5b81810381811115610574576105746106d7565b8082028115828204841417610574576105746106d7565b60008261073457634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122032684cf034f454e243ee8034718e5861259a25f4d2111ae9e2c4db4fa58cda9564736f6c63430008140033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/FraxFerryMockL2.sol:FraxFerryMockL2",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4796,
        "contract": "contracts/FraxFerryMockL2.sol:FraxFerryMockL2",
        "label": "_asset",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)1047"
      },
      {
        "astId": 4821,
        "contract": "contracts/FraxFerryMockL2.sol:FraxFerryMockL2",
        "label": "MIN_WAIT_PERIOD_ADD",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 4824,
        "contract": "contracts/FraxFerryMockL2.sol:FraxFerryMockL2",
        "label": "MIN_WAIT_PERIOD_EXECUTE",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 4827,
        "contract": "contracts/FraxFerryMockL2.sol:FraxFerryMockL2",
        "label": "FEE_RATE",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 4832,
        "contract": "contracts/FraxFerryMockL2.sol:FraxFerryMockL2",
        "label": "FEE_MIN",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 4837,
        "contract": "contracts/FraxFerryMockL2.sol:FraxFerryMockL2",
        "label": "FEE_MAX",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)1047": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}